"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .checkoutsessionupdate import CheckoutSessionUpdate, CheckoutSessionUpdateTypedDict
from .genericmodel import GenericModel, GenericModelTypedDict
from gr4vy.types import BaseModel, Nullable, OptionalNullable, UNSET, UNSET_SENTINEL
from gr4vy.utils import (
    FieldMetadata,
    HeaderMetadata,
    QueryParamMetadata,
    RequestMetadata,
)
import pydantic
from pydantic import model_serializer
from typing import List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class CreateCheckoutSessionGlobalsTypedDict(TypedDict):
    merchant_account_id: NotRequired[str]
    r"""The ID of the merchant account to use for this request."""


class CreateCheckoutSessionGlobals(BaseModel):
    merchant_account_id: Annotated[
        Optional[str],
        pydantic.Field(alias="x-gr4vy-merchant-account-id"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None
    r"""The ID of the merchant account to use for this request."""


CreateCheckoutSessionBodyTypedDict = TypeAliasType(
    "CreateCheckoutSessionBodyTypedDict",
    Union[CheckoutSessionUpdateTypedDict, List[GenericModelTypedDict]],
)


CreateCheckoutSessionBody = TypeAliasType(
    "CreateCheckoutSessionBody", Union[CheckoutSessionUpdate, List[GenericModel]]
)


class CreateCheckoutSessionRequestTypedDict(TypedDict):
    timeout_in_seconds: NotRequired[float]
    merchant_account_id: NotRequired[str]
    r"""The ID of the merchant account to use for this request."""
    request_body: NotRequired[Nullable[CreateCheckoutSessionBodyTypedDict]]


class CreateCheckoutSessionRequest(BaseModel):
    timeout_in_seconds: Annotated[
        Optional[float],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = 1

    merchant_account_id: Annotated[
        Optional[str],
        pydantic.Field(alias="x-gr4vy-merchant-account-id"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None
    r"""The ID of the merchant account to use for this request."""

    request_body: Annotated[
        OptionalNullable[CreateCheckoutSessionBody],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = UNSET

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["timeout_in_seconds", "merchant_account_id", "RequestBody"]
        nullable_fields = ["RequestBody"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
